/*
 * generated by Xtext 2.38.0
 */
package org.xtext.example.mydsl.formatting2

import com.google.inject.Inject
import iDM_DSL.ArithmeticExpr
import iDM_DSL.VariableDeclaration
import org.eclipse.xtext.formatting2.AbstractFormatter2
import org.eclipse.xtext.formatting2.IFormattableDocument
import org.xtext.example.mydsl.services.MyDslGrammarAccess

class MyDslFormatter extends AbstractFormatter2 {
	
	@Inject extension MyDslGrammarAccess

	def dispatch void format(ArithmeticExpr arithmeticExpr, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		for (variableDeclaration : arithmeticExpr.newvariable) {
			variableDeclaration.format
		}
		arithmeticExpr.left.format
		arithmeticExpr.right.format
	}

	def dispatch void format(VariableDeclaration variableDeclaration, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		for (expression : variableDeclaration.expression) {
			expression.format
		}
	}
	
	// TODO: implement for TimeSensors, BooleanExpr, IntExpression, Boolean, DistanceSensor
}
